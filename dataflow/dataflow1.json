{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "azuresql"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable1",
						"type": "DatasetReference"
					},
					"name": "snowflake"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable1",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable1",
						"type": "DatasetReference"
					},
					"name": "sink3"
				}
			],
			"transformations": [
				{
					"name": "lookup1"
				},
				{
					"name": "insert"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				},
				{
					"name": "update"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "select2"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          employee_id as integer,",
				"          first_name as string,",
				"          last_name as string,",
				"          email as string,",
				"          phone_number as string,",
				"          hire_date as date,",
				"          job_id as string,",
				"          salary as decimal(8,2),",
				"          commission_pct as decimal(8,2),",
				"          manager_id as integer,",
				"          department_id as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> azuresql",
				"source(output(",
				"          EMPLOYEE_ID as decimal(38,0),",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as decimal(38,0),",
				"          HIRE_DATE as date,",
				"          JOB_ID as string,",
				"          SALARY as decimal(38,0),",
				"          COMMISION_PCT as decimal(8,2),",
				"          MANAGER_ID as decimal(38,0),",
				"          DEPARTMENT_ID as decimal(38,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> snowflake",
				"azuresql, snowflake lookup(azuresql@employee_id == snowflake@EMPLOYEE_ID,",
				"     multiple: true,",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 filter(isNull(snowflake@EMPLOYEE_ID) || (azuresql@salary!=snowflake@SALARY)) ~> insert",
				"insert derive(isactice = 1) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          employee_id = azuresql@employee_id,",
				"          first_name = azuresql@first_name,",
				"          last_name = azuresql@last_name,",
				"          email = azuresql@email,",
				"          phone_number = azuresql@phone_number,",
				"          hire_date = azuresql@hire_date,",
				"          job_id = azuresql@job_id,",
				"          salary = azuresql@salary,",
				"          commission_pct,",
				"          manager_id = azuresql@manager_id,",
				"          department_id = azuresql@department_id,",
				"          isactice",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"lookup1 filter(!isNull(snowflake@EMPLOYEE_ID) && (snowflake@SALARY!=azuresql@salary)) ~> update",
				"update derive(isactive = 0) ~> derivedColumn2",
				"derivedColumn2 select(mapColumn(",
				"          EMPLOYEE_ID = snowflake@EMPLOYEE_ID,",
				"          FIRST_NAME = snowflake@FIRST_NAME,",
				"          LAST_NAME = snowflake@LAST_NAME,",
				"          EMAIL = snowflake@EMAIL,",
				"          PHONE_NUMBER = snowflake@PHONE_NUMBER,",
				"          HIRE_DATE = snowflake@HIRE_DATE,",
				"          JOB_ID = snowflake@JOB_ID,",
				"          SALARY = snowflake@SALARY,",
				"          COMMISION_PCT,",
				"          MANAGER_ID = snowflake@MANAGER_ID,",
				"          DEPARTMENT_ID = snowflake@DEPARTMENT_ID,",
				"          isactive",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 alterRow(updateIf(1==1)) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          EMPLOYEE_ID as decimal(38,0),",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as decimal(38,0),",
				"          HIRE_DATE as date,",
				"          JOB_ID as string,",
				"          SALARY as decimal(38,0),",
				"          COMMISION_PCT as decimal(8,2),",
				"          MANAGER_ID as decimal(38,0),",
				"          DEPARTMENT_ID as decimal(38,0)",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['EMPLOYEE_ID'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true) ~> sink2",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          EMPLOYEE_ID as decimal(38,0),",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as decimal(38,0),",
				"          HIRE_DATE as date,",
				"          JOB_ID as string,",
				"          SALARY as decimal(38,0),",
				"          COMMISION_PCT as decimal(8,2),",
				"          MANAGER_ID as decimal(38,0),",
				"          DEPARTMENT_ID as decimal(38,0)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true) ~> sink3"
			]
		}
	}
}